# Generated by Django 3.2.16 on 2023-01-31 08:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('catalogue', '0011_change_notification_types'),
    ]

    operations = [
        migrations.CreateModel(
            name='PublishEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('status', models.IntegerField(choices=[(1, 'Locked'), (2, 'Unlocked')], default=1)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_publish', to=settings.AUTH_USER_MODEL)),
                ('catalogue_entry', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='publish_entry', to='catalogue.catalogueentry')),
                ('editors', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Publish Entry',
                'verbose_name_plural': 'Publish Entries',
            },
        ),
        migrations.CreateModel(
            name='WebhookNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('type', models.IntegerField(choices=[(1, 'On Publish')])),
                ('url', models.URLField()),
                ('publish_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webhook_notifications', to='publisher.publishentry')),
            ],
            options={
                'verbose_name': 'Webhook Notification',
                'verbose_name_plural': 'Webhook Notifications',
            },
        ),
        migrations.CreateModel(
            name='GeoServerPublishChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('frequency', models.IntegerField(choices=[(1, 'On Change'), (3, 'Daily'), (4, 'Weekly'), (5, 'Monthly'), (6, 'Quarterly'), (7, 'Yearly')])),
                ('publish_entry', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='geoserver_channel', to='publisher.publishentry')),
            ],
            options={
                'verbose_name': 'GeoServer Publish Channel',
                'verbose_name_plural': 'GeoServer Publish Channels',
            },
        ),
        migrations.CreateModel(
            name='EmailNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('type', models.IntegerField(choices=[(1, 'On Publish'), (2, 'On Lock'), (3, 'Both')])),
                ('email', models.TextField()),
                ('publish_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_notifications', to='publisher.publishentry')),
            ],
            options={
                'verbose_name': 'Email Notification',
                'verbose_name_plural': 'Email Notifications',
            },
        ),
        migrations.CreateModel(
            name='CDDPPublishChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('frequency', models.IntegerField(choices=[(1, 'On Change'), (3, 'Daily'), (4, 'Weekly'), (5, 'Monthly'), (6, 'Quarterly'), (7, 'Yearly')])),
                ('publish_entry', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cddp_channel', to='publisher.publishentry')),
            ],
            options={
                'verbose_name': 'CDDP Publish Channel',
                'verbose_name_plural': 'CDDP Publish Channels',
            },
        ),
    ]
